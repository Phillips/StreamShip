{"ast":null,"code":"import React from\"react\";import{Card,Image}from\"semantic-ui-react\";import Netflix from\"../img/netflix.webp\";import Rotten from\"../img/tomatometer-rotten.svg\";import Fresh from\"../img/tomatometer-fresh.svg\";function MediaCard(_ref){var _ref$movie=_ref.movie,image=_ref$movie.image,url=_ref$movie.url,name=_ref$movie.name,provider=_ref$movie.provider,year=_ref$movie.year,rating=_ref$movie.rating,duration=_ref$movie.duration,genre=_ref$movie.genre,description=_ref$movie.description,cast=_ref$movie.cast,imdb_score=_ref$movie.imdb_score,rotten_tomatoes_score=_ref$movie.rotten_tomatoes_score,metacritic_score=_ref$movie.metacritic_score;return React.createElement(Card,{fluid:true,color:\"orange\",href:url,target:\"_blank\"},React.createElement(Image,{src:image,wrapped:true,ui:false}),React.createElement(Card.Content,null,React.createElement(Card.Header,null,name),React.createElement(Card.Meta,null,React.createElement(\"span\",{className:\"date\"},year),React.createElement(\"b\",null,\"|\"),React.createElement(\"div\",{class:\"ui circular label\"},React.createElement(\"span\",{className:\"rating\"},rating)),React.createElement(\"b\",null,\"|\"),React.createElement(\"i\",{class:\"clock icon\"}),React.createElement(\"span\",{className:\"duration\"},duration),React.createElement(\"b\",null,\"|\"),React.createElement(\"span\",{className:\"genre\"},genre)),React.createElement(Card.Description,null,description)),React.createElement(Card.Content,{extra:true},React.createElement(\"div\",{class:\"ui stackable four column grid\"},React.createElement(\"div\",{class:\"column\"},React.createElement(Image,{class:\"ui image\",src:Netflix,size:\"mini\",rounded:true})),React.createElement(\"div\",{class:\"column\"},React.createElement(\"i\",{class:\"large yellow star icon\"}),imdb_score),React.createElement(\"div\",{class:\"column\"},parseInt(rotten_tomatoes_score.substr(0,rotten_tomatoes_score.indexOf('%')))<60&&React.createElement(Image,{src:Rotten,size:\"mini\"}),parseInt(rotten_tomatoes_score.substr(0,rotten_tomatoes_score.indexOf('%')))>=60&&React.createElement(Image,{src:Fresh,size:\"mini\"}),rotten_tomatoes_score),React.createElement(\"div\",{class:\"column\"},parseInt(metacritic_score.substr(0,metacritic_score.indexOf('/')))>60&&React.createElement(\"div\",{class:\"ui green label\"},metacritic_score.substr(0,metacritic_score.indexOf('/'))),parseInt(metacritic_score.substr(0,metacritic_score.indexOf('/')))>=40&&parseInt(metacritic_score.substr(0,metacritic_score.indexOf('/')))<=60&&React.createElement(\"div\",{class:\"ui yellow label\"},metacritic_score.substr(0,metacritic_score.indexOf('/'))),parseInt(metacritic_score.substr(0,metacritic_score.indexOf('/')))<40&&React.createElement(\"div\",{class:\"ui red label\"},metacritic_score.substr(0,metacritic_score.indexOf('/')))))));}export default MediaCard;","map":{"version":3,"sources":["/Users/andrew/Documents/Programming/StreamShip/website/src/components/MediaCard.js"],"names":["React","Card","Image","Netflix","MediaCard","movie","image","url","name","provider","year","rating","duration","genre","description","cast","imdb_score","rotten_tomatoes_score","metacritic_score","parseInt","substr","indexOf","Rotten","Fresh"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\nimport Netflix from \"../img/netflix.webp\"\nimport Rotten from \"../img/tomatometer-rotten.svg\"\nimport Fresh from \"../img/tomatometer-fresh.svg\"\n\nfunction MediaCard({ movie: { image, url, name, provider, year, rating, duration, genre, description, cast, imdb_score, rotten_tomatoes_score, metacritic_score } }) {\n\n  return (\n    <Card fluid color=\"orange\" href={url} target=\"_blank\">\n      <Image src={image} wrapped ui={false} />\n      <Card.Content>\n        <Card.Header>{name}</Card.Header>\n        <Card.Meta>\n          <span className=\"date\">{year}</span>\n          <b>|</b>\n          <div class=\"ui circular label\"><span className=\"rating\">{rating}</span></div>\n          <b>|</b>\n          <i class=\"clock icon\"></i><span className=\"duration\">{duration}</span>\n          <b>|</b>\n          <span className=\"genre\">{genre}</span>\n        </Card.Meta>\n        <Card.Description>{description}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n          <div class=\"ui stackable four column grid\">\n            <div class=\"column\">\n              <Image class=\"ui image\" src={Netflix} size='mini' rounded />\n            </div>\n            <div class=\"column\">\n              <i class=\"large yellow star icon\"></i>\n              {imdb_score}\n            </div>\n            <div class=\"column\">\n              {parseInt(rotten_tomatoes_score.substr(0, rotten_tomatoes_score.indexOf('%'))) < 60 &&\n                <Image src={Rotten} size='mini' />\n              }\n              {parseInt(rotten_tomatoes_score.substr(0, rotten_tomatoes_score.indexOf('%'))) >= 60 &&\n                <Image src={Fresh} size='mini' />\n              }\n              {rotten_tomatoes_score}\n            </div>\n            <div class=\"column\">\n              {parseInt(metacritic_score.substr(0, metacritic_score.indexOf('/'))) > 60 &&\n                <div class=\"ui green label\">{metacritic_score.substr(0, metacritic_score.indexOf('/'))}</div>\n              }\n              {parseInt(metacritic_score.substr(0, metacritic_score.indexOf('/'))) >= 40 && parseInt(metacritic_score.substr(0, metacritic_score.indexOf('/'))) <= 60 &&\n                <div class=\"ui yellow label\">{metacritic_score.substr(0, metacritic_score.indexOf('/'))}</div>\n              }\n              {parseInt(metacritic_score.substr(0, metacritic_score.indexOf('/'))) < 40 &&\n                <div class=\"ui red label\">{metacritic_score.substr(0, metacritic_score.indexOf('/'))}</div>\n              }\n            </div>\n          </div>\n      </Card.Content>\n    </Card>\n  );\n}\n\nexport default MediaCard;\n"]},"metadata":{},"sourceType":"module"}