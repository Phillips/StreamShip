{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Documents/Programming/StreamShip/website/src/components/MediaCard.js\";\nimport React from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\nimport Netflix from \"../img/netflix.webp\";\nimport Rotten from \"../img/tomatometer-rotten.svg\";\nimport Fresh from \"../img/tomatometer-fresh.svg\";\n\nfunction MediaCard({\n  movie: {\n    image,\n    url,\n    name,\n    provider,\n    year,\n    rating,\n    duration,\n    genre,\n    description,\n    cast,\n    imdb_score,\n    rotten_tomatoes_score,\n    metacritic_score\n  }\n}) {\n  return React.createElement(Card, {\n    fluid: true,\n    color: \"orange\",\n    href: url,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: image,\n    wrapped: true,\n    ui: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, name), React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, year), React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"|\"), React.createElement(\"div\", {\n    class: \"ui circular label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, rating)), React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"|\"), React.createElement(\"i\", {\n    class: \"clock icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"duration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, duration), React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"|\"), React.createElement(\"span\", {\n    className: \"genre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, genre)), React.createElement(Card.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, description)), React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"ui stackable four column grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Image, {\n    class: \"ui image\",\n    src: Netflix,\n    size: \"mini\",\n    rounded: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    class: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"large yellow star icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), imdb_score), React.createElement(\"div\", {\n    class: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, parseInt(rotten_tomatoes_score.substr(0, rotten_tomatoes_score.indexOf('%'))) < 60 && React.createElement(Image, {\n    src: Rotten,\n    size: \"mini\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), parseInt(rotten_tomatoes_score.substr(0, rotten_tomatoes_score.indexOf('%'))) >= 60 && React.createElement(Image, {\n    src: Fresh,\n    size: \"mini\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), rotten_tomatoes_score), React.createElement(\"div\", {\n    class: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, parseInt(metacritic_score.substr(0, metacritic_score.indexOf('/'))) > 60 && React.createElement(\"div\", {\n    class: \"ui green label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, metacritic_score.substr(0, metacritic_score.indexOf('/'))), parseInt(metacritic_score.substr(0, metacritic_score.indexOf('/'))) >= 40 && parseInt(metacritic_score.substr(0, metacritic_score.indexOf('/'))) <= 60 && React.createElement(\"div\", {\n    class: \"ui yellow label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, metacritic_score.substr(0, metacritic_score.indexOf('/'))), parseInt(metacritic_score.substr(0, metacritic_score.indexOf('/'))) < 40 && React.createElement(\"div\", {\n    class: \"ui red label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, metacritic_score.substr(0, metacritic_score.indexOf('/')))))));\n}\n\nexport default MediaCard;","map":{"version":3,"sources":["/Users/andrew/Documents/Programming/StreamShip/website/src/components/MediaCard.js"],"names":["React","Card","Image","Netflix","MediaCard","movie","image","url","name","provider","year","rating","duration","genre","description","cast","imdb_score","rotten_tomatoes_score","metacritic_score","parseInt","substr","indexOf","Rotten","Fresh"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\nimport Netflix from \"../img/netflix.webp\"\nimport Rotten from \"../img/tomatometer-rotten.svg\"\nimport Fresh from \"../img/tomatometer-fresh.svg\"\n\nfunction MediaCard({ movie: { image, url, name, provider, year, rating, duration, genre, description, cast, imdb_score, rotten_tomatoes_score, metacritic_score } }) {\n\n  return (\n    <Card fluid color=\"orange\" href={url} target=\"_blank\">\n      <Image src={image} wrapped ui={false} />\n      <Card.Content>\n        <Card.Header>{name}</Card.Header>\n        <Card.Meta>\n          <span className=\"date\">{year}</span>\n          <b>|</b>\n          <div class=\"ui circular label\"><span className=\"rating\">{rating}</span></div>\n          <b>|</b>\n          <i class=\"clock icon\"></i><span className=\"duration\">{duration}</span>\n          <b>|</b>\n          <span className=\"genre\">{genre}</span>\n        </Card.Meta>\n        <Card.Description>{description}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n          <div class=\"ui stackable four column grid\">\n            <div class=\"column\">\n              <Image class=\"ui image\" src={Netflix} size='mini' rounded />\n            </div>\n            <div class=\"column\">\n              <i class=\"large yellow star icon\"></i>\n              {imdb_score}\n            </div>\n            <div class=\"column\">\n              {parseInt(rotten_tomatoes_score.substr(0, rotten_tomatoes_score.indexOf('%'))) < 60 &&\n                <Image src={Rotten} size='mini' />\n              }\n              {parseInt(rotten_tomatoes_score.substr(0, rotten_tomatoes_score.indexOf('%'))) >= 60 &&\n                <Image src={Fresh} size='mini' />\n              }\n              {rotten_tomatoes_score}\n            </div>\n            <div class=\"column\">\n              {parseInt(metacritic_score.substr(0, metacritic_score.indexOf('/'))) > 60 &&\n                <div class=\"ui green label\">{metacritic_score.substr(0, metacritic_score.indexOf('/'))}</div>\n              }\n              {parseInt(metacritic_score.substr(0, metacritic_score.indexOf('/'))) >= 40 && parseInt(metacritic_score.substr(0, metacritic_score.indexOf('/'))) <= 60 &&\n                <div class=\"ui yellow label\">{metacritic_score.substr(0, metacritic_score.indexOf('/'))}</div>\n              }\n              {parseInt(metacritic_score.substr(0, metacritic_score.indexOf('/'))) < 40 &&\n                <div class=\"ui red label\">{metacritic_score.substr(0, metacritic_score.indexOf('/'))}</div>\n              }\n            </div>\n          </div>\n      </Card.Content>\n    </Card>\n  );\n}\n\nexport default MediaCard;\n"]},"metadata":{},"sourceType":"module"}